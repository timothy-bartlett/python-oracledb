#------------------------------------------------------------------------------
# Copyright (c) 2022, Oracle and/or its affiliates.
#
# This software is dual-licensed to you under the Universal Permissive License
# (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl and Apache License
# 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose
# either license.
#
# If you elect to accept the software under the Apache License, Version 2.0,
# the following applies:
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#------------------------------------------------------------------------------

#------------------------------------------------------------------------------
# fields.cfg
#
# Contains the fields found on the ConnectParams and PoolParams classes.
#------------------------------------------------------------------------------

# pool only parameters

[min]
type = int
default: 1
pool_only: True
description =
    the minimum number of connections the pool should contain

[max]
type = int
default: 2
pool_only: True
description =
    the maximum number of connections the pool should contain

[increment]
type = int
default: 1
pool_only: True
description =
    the number of connections that should be added to the pool whenever a new
    connection needs to be created

[connectiontype]
type = Type["oracledb.Connection"]
pool_only: True
description =
    the class of the connection that should be returned during calls to
    pool.acquire(). It must be Connection or a subclass of Connection

[getmode]
type = int
default = oracledb.POOL_GETMODE_WAIT
pool_only: True
description =
    how pool.acquire() will behave. One of the constants
    oracledb.POOL_GETMODE_WAIT, oracledb.POOL_GETMODE_NOWAIT,
    oracledb.POOL_GETMODE_FORCEGET, or oracledb.POOL_GETMODE_TIMEDWAIT

[homogeneous]
type = bool
default = True
pool_only: True
description =
    a boolean indicating whether the connections are homogeneous (same user) or
    heterogeneous (multiple users)

[timeout]
type = int
default = 0
pool_only: True
description =
    length of time (in seconds) that a connection may remain idle in the pool
    before it is terminated. If it is 0 then connections are never terminated

[wait_timeout]
type = int
default = 0
pool_only: True
description =
    length of time (in milliseconds) that a caller should wait when acquiring a
    connection from the pool with getmode set to
    oracledb.POOL_GETMODE_TIMEDWAIT

[max_lifetime_session]
type = int
default = 0
pool_only: True
description =
    length of time (in seconds) that connections can remain in the pool. If it
    is 0 then connections may remain in the pool indefinitely

[session_callback]
type = Callable
pool_only: True
description =
    a callable that is invoked when a connection is returned from the pool for
    the first time, or when the connection tag differs from the one requested

[max_sessions_per_shard]
type = int
default = 0
pool_only: True
description =
    the maximum number of connections that may be associated with a particular
    shard

[soda_metadata_cache]
type = bool
default = False
pool_only: True
description =
    boolean indicating whether or not the SODA metadata cache should be enabled

[ping_interval]
type = int
default = 60
pool_only: True
description =
    length of time (in seconds) after which an unused connection in the pool
    will be a candidate for pinging when pool.acquire() is called. If the ping
    to the database indicates the connection is not alive a replacement
    connection will be returned by pool.acquire(). If ping_interval is a
    negative value the ping functionality will be disabled


# common parameters

[user]
type = str
description =
    the name of the user to connect to

[proxy_user]
type = str
description =
    the name of the proxy user to connect to. If this value is not specified,
    it will be parsed out of user if user is in the form "user[proxy_user]"

[password]
type = str
hidden = True
description =
    the password for the user

[newpassword]
type = str
hidden = True
description =
    the new password for the user. The new password will take effect
    immediately upon a successful connection to the database

[wallet_password]
type = str
hidden = True
description =
    the password to use to decrypt the wallet, if it is encrypted. This value
    is only used in thin mode

[access_token]
type = Union[str, tuple, Callable]
hidden = True
description =
    expected to be a string or a 2-tuple or a callable. If it is a string, it
    specifies an Azure AD OAuth2 token used for Open Authorization (OAuth 2.0)
    token based authentication. If it is a 2-tuple, it specifies the token and
    private key strings used for Oracle Cloud Infrastructure (OCI) Identity and
    Access Management (IAM) token based authentication. If it is a callable, it
    returns either a string or a 2-tuple used for OAuth 2.0 or OCI IAM token
    based authentication and is useful when the pool needs to expand and create
    new connections but the current authentication token has expired

[host]
type = str
decorator = _address_attr
description =
    the name or IP address of the machine hosting the database or the database
    listener

[port]
type = int
default = 1521
decorator = _address_attr
description =
    the port number on which the database listener is listening

[protocol]
type = str
default = "tcp"
decorator = _address_attr
description =
    one of the strings "tcp" or "tcps" indicating whether to use unencrypted
    network traffic or encrypted network traffic (TLS)

[https_proxy]
type = str
decorator = _address_attr
description =
    the name or IP address of a proxy host to use for tunneling secure
    connections

[https_proxy_port]
type = int
default = 0
decorator = _address_attr
description =
    the port on which to communicate with the proxy host

[service_name]
type = str
decorator = _description_attr
description =
    the service name of the database

[sid]
type = str
decorator = _description_attr
description =
    the system identifier (SID) of the database.
    Note using a service_name instead is recommended

[server_type]
type = str
decorator = _description_attr
description =
    the type of server connection that should be established. If specified, it
    should be one of "dedicated", "shared" or "pooled"

[cclass]
type = str
decorator = _description_attr
description =
    connection class to use for Database Resident Connection Pooling (DRCP)

[purity]
type = int
default = oracledb.PURITY_DEFAULT
decorator = _description_attr
description =
    purity to use for Database Resident Connection Pooling (DRCP)

[expire_time]
type = int
default = 0
decorator = _description_attr
description =
    an integer indicating the number of minutes between the sending of
    keepalive probes. If this parameter is set to a value greater than zero it
    enables keepalive

[retry_count]
type = int
default = 0
decorator = _description_attr
description =
    the number of times that a connection attempt should be retried before the
    attempt is terminated

[retry_delay]
type = int
default = 0
decorator = _description_attr
description =
    the number of seconds to wait before making a new connection attempt

[tcp_connect_timeout]
type = float
default = 60.0
decorator = _description_attr
description =
    a float indicating the maximum number of seconds to wait for establishing a
    connection to the database host

[ssl_server_dn_match]
type = bool
default = True
decorator = _description_attr
description =
    boolean indicating whether the server certificate distinguished name (DN)
    should be matched in addition to the regular certificate verification that
    is performed. Note that if the ssl_server_cert_dn parameter is not
    privided, host name matching is performed instead

[ssl_server_cert_dn]
type = str
decorator = _description_attr
description =
    the distinguished name (DN) which should be matched with the server. This
    value is ignored if the ssl_server_dn_match parameter is not set to the
    value True. If specified this value is used for any verfication.
    Otherwise the hostname will be used.

[wallet_location]
type = str
decorator = _description_attr
description =
    the directory where the wallet can be found. In thin mode this must be the
    directory containing the PEM-encoded wallet file ewallet.pem. In thick mode
    this must be the directory containing the file cwallet.sso

[events]
type = bool
default = False
description =
    boolean specifying whether events mode should be enabled. This value is
    only used in thick mode and is needed for continuous query notification and
    high availability event notifications

[externalauth]
type = bool
default = False
description =
    a boolean indicating whether to use external authentication

[mode]
type = int
default = oracledb.AUTH_MODE_DEFAULT
description =
    authorization mode to use. For example oracledb.AUTH_MODE_SYSDBA

[disable_oob]
type = bool
default = False
description =
    boolean indicating whether out-of-band breaks should be disabled. This
    value is only used in thin mode. It has no effect on Windows which does
    not support this functionality

[stmtcachesize]
type = int
default = oracledb.defaults.stmtcachesize
description =
    identifies the initial size of the statement cache

[edition]
type = str
description =
    edition to use for the connection. This parameter cannot be used
    simultaneously with the cclass parameter

[tag]
type = str
description =
    identifies the type of connection that should be returned from a pool.
    This value is only used in thick mode

[matchanytag]
type = bool
default: False
description =
    boolean specifying whether any tag can be used when acquiring a connection
    from the pool. This value is only used in thick mode.

[config_dir]
type = str
default: oracledb.defaults.config_dir
description =
    directory in which the optional tnsnames.ora configuration file is located.
    This value is only used in thin mode. For thick mode use the config_dir
    parameter of init_oracle_client()

[appcontext]
type = list
description =
    application context used by the connection. It should be a list of
    3-tuples (namespace, name, value) and each entry in the tuple should be
    a string. This value is only used in thick mode

[shardingkey]
type = list
description =
    a list of strings, numbers, bytes or dates that identify the database shard
    to connect to. This value is only used in thick mode

[supershardingkey]
type = list
description =
    a list of strings, numbers, bytes or dates that identify the database
    shard to connect to. This value is only used in thick mode

[debug_jdwp]
type = str
description =
    a string with the format "host=<host>;port=<port>" that specifies the host
    and port of the PL/SQL debugger. This value is only used in thin mode.
    For thick mode set the ORA_DEBUG_JDWP environment variable

[handle]
type = int
default = 0
hidden = True
description =
    an integer representing a pointer to a valid service context handle.
    This value is only used in thick mode. It should be used with extreme
    caution

[threaded]
type = bool
default = True
hidden = True

[encoding]
type = str
hidden = True

[nencoding]
type = str
hidden = True

[waitTimeout]
type = int
hidden = True
pool_only = True

[maxLifetimeSession]
type = int
hidden = True
pool_only = True

[maxSessionsPerShard]
type = int
hidden = True
pool_only = True

[sessionCallback]
type = Callable
hidden = True
pool_only = True
